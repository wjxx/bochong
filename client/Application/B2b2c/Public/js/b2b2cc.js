/**
 * 商城公共脚本区域
 * ============================================================================
 * 版权所有 (C) 
 * 网站地址:
 * ============================================================================
 * $Version: v1.0.0 Beta $
 * $Author: liwenxuan <liwenxuan@pokpets.com> $
 * $Date: 2016/7/11 $
 * $Id: b2b2cc.js 2016/7/11  $
 **/
var b2b2cc = { 
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     *开启遮罩
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author wanghaipeng   Date:2016/7/16
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     **/
     show_marsk : function() {
         $('#b2b2c_marsk').show();
     },
    
    /**
     *+--------------------------------------------------------------------------------------------------------------------
     *关闭遮罩
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author wanghaipeng   Date:2016/7/16
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     **/
     close_marsk : function() {
         $('#b2b2c_marsk').hide();
     },
	 
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 判断变量是否为空
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/11
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame Object 必填 data
     * +--------------------------------------------------------------------------------------------------------------------
     * @return Boolean	是:true,否:false
     * +--------------------------------------------------------------------------------------------------------------------
     **/	
	isNull : function(data) {
		if(typeof(data) == 'boolean') {
			return data;
		} else if(typeof(data) == 'string' && b2b2cc.trims(data).length == 0) {
			  return true;
		} else if(data == 0) {
			return false;
          } else if(typeof(data) == 'number' && isNaN(data)){
               return true;
		} else {
			return (data == "" || data == undefined || data == null) ? true : false; 
		}
	},
	
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 无跳转刷新当前界面
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/8/24
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame 
     * +--------------------------------------------------------------------------------------------------------------------
     * @return 
     * +--------------------------------------------------------------------------------------------------------------------
    **/	
	refresh: function(url, datas, is) {
		if(is) {
			var ds = '?';
			datas = datas.split(",");
			for(var one=0; one<datas.length; one++) {
				datas[one] = datas[one].split(':');
				ds += datas[one][0]+'='+datas[one][1]+'&';
			}
			window.location.href = GV.MODULE_URL+url+ds;
		} else {
			 b2b2cc.show_marsk();
			 
			 var ds = '{';
			 datas = datas.split(",");
		 	 for(var one=0; one<datas.length; one++) {
				 datas[one] = datas[one].split(':');
				 if(one > 0) {
					 ds += ',';
				 }
				 ds += "'"+datas[one][0]+"':'"+datas[one][1]+"'";
			 }
			 ds += '}';
			 ds = eval('(' + ds + ')');
			 $.get(GV.MODULE_URL+url,ds ,function(e){
				e = e.match(/<body[^>]*>([\s\S]*)<\/body>/);
				e = e[1];
				//document.body.innerHTML = '';
				//document.body.innerHTML = e;
				$(document.body).html(e);
			}, 'html');
		}
	},
	
    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 设置缓存
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/18
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String key 变量名
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame Object val 变量值
     * +--------------------------------------------------------------------------------------------------------------------
     * @return void
     * +--------------------------------------------------------------------------------------------------------------------
     **/
	 caches_array : {},
	 cache_set : function(key, val) {
		b2b2cc.caches_array.key = val;
	 },
	 
	 /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 获取值
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/18
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String key 变量名
     * +--------------------------------------------------------------------------------------------------------------------
     * @return void
     * +--------------------------------------------------------------------------------------------------------------------
     **/
	 cache_get : function(key) {
		 return b2b2cc.caches_array.key;
	 },

    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 方法成功时的返回
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/11
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String 选填 info 成功时提示的信息
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame json 选填 data 成功时返回的数据
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame String 选填 key 成功错误存储用KEY
     * +--------------------------------------------------------------------------------------------------------------------
     * @return json
     * +--------------------------------------------------------------------------------------------------------------------
     **/
    success : function(info, data, key) {
		if(!b2b2cc.isNull(key)) {
			b2b2cc.cache_set(key, true);
		}
        return {'info': info, 'data': data, 'success': 1};
    },
	
    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 方法错误时的返回
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/11
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String 选填 info 成功时提示的信息
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame json 选填 data 成功时返回的数据
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame String 选填 key 成功错误存储用KEY
     * +--------------------------------------------------------------------------------------------------------------------
     * @return json
     * +--------------------------------------------------------------------------------------------------------------------
     **/
    error : function(info, data, key) {
		if(!b2b2cc.isNull(key)) {
			b2b2cc.cache_set(key, false);
		}
        return {'info': info, 'data': data, 'success': 0};
    },
	
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 剔除左右空字符
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/15
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String 必填 e
     * +--------------------------------------------------------------------------------------------------------------------
     * @return String e
     * +--------------------------------------------------------------------------------------------------------------------
     **/	
	trims : function(e) {
		return e.replace(/(^\s*)|(\s*$)/g, "");
	},
	
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 秒数转换
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/13
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame Int 必填 times	时间(秒数)
     * +--------------------------------------------------------------------------------------------------------------------
     * @return number
     * +--------------------------------------------------------------------------------------------------------------------
     **/	
	times : function(times) {
		return times * 1000;
	},
	
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 时间格式化
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/13
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String 选填 style 样式(默认 %t天%h时%i分%s秒)
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame Int 选填 times 秒数
     * +--------------------------------------------------------------------------------------------------------------------
     * @return String style 格式化后的时间
     * +--------------------------------------------------------------------------------------------------------------------
     **/
	timeDate:function(style, times) {
		
		if(typeof(style) == 'number') {
			times = style;
			style = '%t天%h时%i分%s秒';
		} 
		
		var t = parseInt(times / 86400);
		var h = parseInt((times % 86400) /3600);
		var i = parseInt(((times % 86400) % 3600) / 60);
		var s = ((times % 86400) % 3600) % 60;

		style = style.replace(/%t/g, t);
		style = style.replace(/%h/g, h);
		style = style.replace(/%i/g, i);
		style = style.replace(/%s/g, s);

		return style;
	},

	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 日期格式化
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/13
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String 选填 style 样式(默认yyyy-MM-dd hh:mm:ss)
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame Int 选填 times 秒数(时间戳)
     * +--------------------------------------------------------------------------------------------------------------------
     * @return String	
     * +--------------------------------------------------------------------------------------------------------------------
     **/
	dates : function(style, times) {
		Date.prototype.pattern=function(fmt) {         
			var o = {         
			"M+" : this.getMonth()+1, //月份         
			"d+" : this.getDate(), //日         
			"h+" : this.getHours()%12 == 0 ? 12 : this.getHours()%12, //小时         
			"H+" : this.getHours(), //小时         
			"m+" : this.getMinutes(), //分         
			"s+" : this.getSeconds(), //秒         
			"q+" : Math.floor((this.getMonth()+3)/3), //季度         
			"S" : this.getMilliseconds() //毫秒         
			};         
			var week = {         
				"0" : "/u65e5",         
				"1" : "/u4e00",         
				"2" : "/u4e8c",         
				"3" : "/u4e09",         
				"4" : "/u56db",         
				"5" : "/u4e94",         
				"6" : "/u516d"        
			};         
			if(/(y+)/.test(fmt)){         
				fmt=fmt.replace(RegExp.$1, (this.getFullYear()+"").substr(4 - RegExp.$1.length));         
			}         
			if(/(E+)/.test(fmt)){         
				fmt=fmt.replace(RegExp.$1, ((RegExp.$1.length>1) ? (RegExp.$1.length>2 ? "/u661f/u671f" : "/u5468") : "")+week[this.getDay()+""]);         
			}         
			for(var k in o){         
				if(new RegExp("("+ k +")").test(fmt)){         
					fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : (("00"+ o[k]).substr((""+ o[k]).length)));         
				}         
			}         
			return fmt;         
		}
		
		var date = new Object();
		style = b2b2cc.isNull(style) ? 'yyyy-MM-dd hh:mm:ss' : style;
		if(typeof(style) == 'number') {
			date = new Date(b2b2cc.times(style));
			style = 'yyyy-MM-dd hh:mm:ss';
		} else if(b2b2cc.isNull(times)) {
			date = new Date();
		} else {
			times = b2b2cc.times(times);
			date = new Date(times);
		}
		
		return date.pattern(style);
	},
	
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 关闭时间机器
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/13
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame Object 必填 obj 时间机器对象
     * +--------------------------------------------------------------------------------------------------------------------
     * @return void	
     * +--------------------------------------------------------------------------------------------------------------------
     **/
	timemachinec : function(obj) {
		window.clearInterval(obj);
	},
	
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 启动时间机器
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/13
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame Object 必填 functions 要执行的方法
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame Int 必填 times 间隔多长时间执行一次
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame Int 选填 cycle 执行的次数不填写为无限执行
     * +--------------------------------------------------------------------------------------------------------------------
     * @return Object setIntervalObjs 时间机器的对象
     * +--------------------------------------------------------------------------------------------------------------------
     **/
	timemachines : function(functions, times, cycle) {
		times = b2b2cc.times(times);
		var cycle_one = 0;
		if(b2b2cc.isNull(cycle)) {
			cycle_one++;
			functions(cycle_one);
		} else if(cycle > 0) {
			functions(cycle);
			cycle--;
		} 
		var setIntervalObjs =  window.setInterval(function(){
			if(b2b2cc.isNull(cycle)) {
				cycle_one++;
				functions(cycle_one);
			} else if(cycle > 0) {
				functions(cycle);
				cycle--;
			} else {
				b2b2cc.timemachinec(setIntervalObjs);
			}
		}, times);
		
		return setIntervalObjs;
	},
	
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 前段接口调用
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/11
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String 必填 urls 接口地址
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame json 选填 datas 接口参数
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame Object 选填 functions 接口回掉方法
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame String 选填 types 接口调用方式(get/post) 默认 get
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame Boolean 选填 asyncs 是否异步(true:是,false否) 默认true
     * +--------------------------------------------------------------------------------------------------------------------
     * @return json
     * +--------------------------------------------------------------------------------------------------------------------
     **/
	curls : function(urls, datas, functions, types, asyncs) {
		types = b2b2cc.isNull(types) ? 'get' : types;
		asyncs = b2b2cc.isNull(asyncs) ? true : asyncs;
		
		if(asyncs == false) {
			b2b2cc.show_marsk();
		}
		
		$.ajax({
			async : asyncs,
			type : types,
			data : {'url':urls, 'type':types, 'data':datas},
			url : GV.MODULE_URL + 'Public/curls',
			dataType : 'json',
			success : function(e) {
				if(asyncs == false) {
					b2b2cc.close_marsk();
				}
				functions(e);
			}
		}); 
	
	},
	
    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 手机号码正确性校验
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author yangjing   Date:2016/7/11
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String 必填 telno 手机号码
     * +--------------------------------------------------------------------------------------------------------------------
     * @return json
     * +--------------------------------------------------------------------------------------------------------------------
     **/
    telno: function(telno) {
        var reg = /^0?1[3|4|5|8|7][0-9]\d{8}$/;
        if (!reg.test(telno)) {
            return b2b2cc.error('格式错误');
        } else {
            return b2b2cc.success('格式正确');
        }
    },

    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 关闭弹窗
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author wanghaipeng   Date:2016/7/12
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame dialogid 需要关闭的dialogid，不填默认关闭加载窗的id
     * * +--------------------------------------------------------------------------------------------------------------------
     * @return json
     * +--------------------------------------------------------------------------------------------------------------------
     **/
    dialogClose : function(dialogid) {
        var id = (dialogid) ? dialogid : 'dialog_loading';
        dialog.get(id).close().remove();
    },
	
    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 弹窗提示信息（2秒后关闭）
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author wanghaipeng   Date:2016/7/12
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String content 需要显示的内容
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame String url 跳转地址(例子: Index/index)
     * +--------------------------------------------------------------------------------------------------------------------
     * @return json
     * +--------------------------------------------------------------------------------------------------------------------
     **/
    popupdialog : function(content, url) {
        var d = dialog({
            lock: true,
            opacity: 0.5,
            content: content
        });
        d.showModal();
        setTimeout(function() {
			d.close().remove();
			if(!b2b2cc.isNull(url)) {
				window.location.href = GV.MODULE_URL+url;
			}
        }, 2000);
    },
	
    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 页面跳转
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan   Date:2016/7/20
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame String url 跳转地址(例子: Index/index)
     * +--------------------------------------------------------------------------------------------------------------------
     * @return json
     * +--------------------------------------------------------------------------------------------------------------------
     **/
    actions : function(url) {
		window.location.href = GV.MODULE_URL+url;
	},
	
    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 弹窗显示html信息
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author wanghaipeng   Date:2016/7/12
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame title 选填 弹窗显示的标题
     * @parame html 必填  需要显示的html内容
     * @parame callback 选填 确定按钮的回调方法
     * @parame t 选填 当前对象（this） 显示在发生事件的标签附件（类似删除时的提示）
     * @parame cancleback 选填 取消摁扭回调方法
     * +--------------------------------------------------------------------------------------------------------------------
     * @return json
     * +--------------------------------------------------------------------------------------------------------------------
     **/
    popupdialoghtml : function(html, callback, t, title,cancleback) {
        var options = {
            title: title,
            lock: true,
            opacity: 0.7,
            content: html,
            okValue: '确定',
            ok: callback,
            cancelValue: '关闭',
            cancel: true
        }
        if (t) {
            options.follow = t;
        }
        if(cancleback){
            options.cancel=cancleback;
        }
        var d = dialog(options)
        d.showModal();
    },
    
    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 金额正确性校验
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author zhangnan   Date:2016/7/13
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String 必填 money 金额
     * +--------------------------------------------------------------------------------------------------------------------
     * @return boolean
     * +--------------------------------------------------------------------------------------------------------------------
     **/
    money : function(money){
        re=/^[1-9]{1}\d*(\.\d{1,1})?$/;
        if(!re.test(money)){
            re2=/^0\.[1-9]{1}$/;
            if(!re2.test(money)){
               return b2b2cc.error('格式错误');
            }else{
               return b2b2cc.success('格式正确');
            }
        }else{
            return b2b2cc.success('格式正确');
        }
    },
	
    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 四舍五入获取浮点型数值
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan Date:2016/8/22
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame Int 必填 val 数值
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame Int 必填 ws 保留位数
     * +--------------------------------------------------------------------------------------------------------------------
     * @return boolean
     * +--------------------------------------------------------------------------------------------------------------------
     **/
    toFixed: function(val, ws) {
		var val = parseFloat(val);
		if(isNaN(val)) {
			val = 0;
		}
		return val.toFixed(ws);
	},
	
    /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 整形转换
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenxuan Date:2016/8/22
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame Int 必填 val 数值
     * +--------------------------------------------------------------------------------------------------------------------
	 * @parame Int 选填 mr 默认数值
     * +--------------------------------------------------------------------------------------------------------------------
     * @return boolean
     * +--------------------------------------------------------------------------------------------------------------------
     **/
    parseInt: function(val, mr) {
		var val = parseInt(val);
		if(isNaN(val)) {
			if(mr == undefined) {
				val = 0;
			} else {
				val = mr;
			}
		}
		return val;
	},
/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 检测邮编是否正确
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author wanghaipeng Date:2016/9/8
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String 必填 zipcode 邮编
     * +--------------------------------------------------------------------------------------------------------------------
     * @return boolean
     * +--------------------------------------------------------------------------------------------------------------------
     **/
     checkZipCode:function(zipcode){
         if(zipcode.length == 0){
             return false
         }
         var reg = /^[1-9]\d{5}$/;
         if(reg.test(zipcode)){
             return true;
         }else{
             return false;
         }
     },
		
     /**
     *+--------------------------------------------------------------------------------------------------------------------
     * 检测物流单号格式
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author zhangnan Date:2016/9/20
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     * +--------------------------------------------------------------------------------------------------------------------
     * @type   
     * +--------------------------------------------------------------------------------------------------------------------
     * @parame String 必填 logi_no 物流单号
     * +--------------------------------------------------------------------------------------------------------------------
     * @return boolean
     * +--------------------------------------------------------------------------------------------------------------------
     **/
     check_logi_no : function(logi_no){
          var reg = /^[0-9a-zA-Z]*$/g;
          if(!reg.test(logi_no)){
               return b2b2cc.error('格式错误');
          }else{
               return b2b2cc.success('格式正确');
          }
     },
	
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 文件上传
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author wanghaipeng   Date:2016/7/16
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     *+--------------------------------------------------------------------------------------------------------------------
     * @parame   Object 必填 downcallback    上传完成时回调方法
     * +-------------------------------------------------------------------------------------------------------------------
     * @parame   Object 选填 addcallback    文件上传时回调方法
     *+--------------------------------------------------------------------------------------------------------------------
     * @return void
     * +-------------------------------------------------------------------------------------------------------------------
     **/
    img_file_upload: function(downcallback, addcallback) {
          console.log('img_file_upload');
        var option = {};
        var url = GV.MODULE_URL + 'Index/upload_previews';
        
        if (!b2b2cc.isNull(addcallback)) {
            option.add = addcallback;//文件选择完毕时调用的数据
        }
		
		if (!b2b2cc.isNull(downcallback)) {
            option.done = downcallback;
        }

		option.url = url;//提交的服务器地址
		option.dataType = 'json';//数据类型
          console.log('url='+url);
          console.log($('.fileupload'));
		$('.fileupload').fileupload(option);
    },
	
	/**
     *+--------------------------------------------------------------------------------------------------------------------
     * 图片文件上传切割预览
     *+--------------------------------------------------------------------------------------------------------------------
     * @Author liwenuan Date:2016/12/9
     *+--------------------------------------------------------------------------------------------------------------------
     * @access public
     *+--------------------------------------------------------------------------------------------------------------------
     * @parame   Object 必填 downcallback    上传完成时回调方法
     * +-------------------------------------------------------------------------------------------------------------------
     * @parame   Object 选填 addcallback    文件上传时回调方法
     *+--------------------------------------------------------------------------------------------------------------------
     * @return void
     * +-------------------------------------------------------------------------------------------------------------------
     **/
    upload_cut_preview: function(obj, downcallback, addcallback) {
        var option = {};
        var url = GV.MODULE_URL + 'Index/upload_cut_preview';
        
        if (!b2b2cc.isNull(addcallback)) {
            option.add = addcallback;//文件选择完毕时调用的数据
        }
		
		if (!b2b2cc.isNull(downcallback)) {
            option.done = downcallback;
        }

		option.url = url;//提交的服务器地址
		option.dataType = 'json';//数据类型
		$(obj).fileupload(option);
    },

};